{
	"paused": false,
	"id": "fxpou001dy41d",
	"reference": "@dashboard",
	"author": "",
	"group": "/content/typerefinery-showcase/pages/pages/dashboard",
	"icon": "fa fa-project-diagram",
	"color": "#68B25B",
	"version": "1",
	"readme": "",
	"url": "https://",
	"name": "@dashboard-name",
	"components": {
		"coxvhdf84d": "<script total>\n\n\texports.name = 'Input';\n\texports.group = 'FlowStream';\n\texports.version = '1';\n\texports.icon = 'fa fa-broadcast-tower';\n\texports.author = 'Total.js';\n\texports.config = { name: '', readme: '' };\n\texports.outputs = [{ id: 'data', name: 'Data' }];\n\texports.type = 'input';\n\n\texports.make = function(instance, config) {\n\n\t\tinstance.input = function(fromflowstreamid, fromid, data) {\n\t\t\tinstance.send('data', data);\n\t\t};\n\n\t};\n\n</script>\n\n<settings>\n\t<div class=\"padding\">\n\t\t<div data---=\"input__?.name__required:1\" class=\"m\"><b>Input name</b></div>\n\t\t<div data---=\"input__?.readme__monospace:1;type:multiline;height:250\">Readme</div>\n\t\t<div class=\"help\">Supports markdown format</div>\n\t</div>\n</settings>\n\n<readme>\nThe component receives data from a `Publish` component from another FlowStream instance.\n</readme>\n\n<body>\n\t<header>\n\t\t<i class=\"ICON\"></i>NAME: <b data-bind=\"CONFIG.name__text__empty\"></b>\n\t</header>\n</body>",
		"cp2jt18af1": "<script total>\n\n\texports.name = 'Subscribe';\n\texports.group = 'FlowStream';\n\texports.version = '2';\n\texports.icon = 'fa fa-broadcast-tower';\n\texports.author = 'Total.js';\n\texports.config = { name: '' };\n\texports.outputs = [{ id: 'data', name: 'Data' }];\n\texports.type = 'input2';\n\n\texports.call = function(data, answer) {\n\t\t// \"this\" means FlowStream instance\n\t\tthis.io(function(err, response) {\n\t\t\tvar arr = [];\n\t\t\tfor (var flow of response) {\n\t\t\t\tfor (var com of flow.items) {\n\t\t\t\t\tif (com.type === 'output') {\n\t\t\t\t\t\tcom.id = flow.id + '_' + com.id;\n\t\t\t\t\t\tcom.name = '<b>' + flow.name.encode() + ':</b> ' + com.name.encode();\n\t\t\t\t\t\tarr.push(com);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tarr.quicksort('name');\n\t\t\tanswer(arr);\n\t\t});\n\t};\n\n\texports.make = function(instance, config) {\n\n\t\tvar flowstreamid;\n\t\tvar instanceid;\n\n\t\tinstance.input = function(fromflowstreamid, fromid, data) {\n\t\t\tif (flowstreamid === fromflowstreamid && instanceid === fromid)\n\t\t\t\tinstance.send('data', data);\n\t\t};\n\n\t\tinstance.flowstream = function(id, type) {\n\t\t\tif (!id || (config.id && config.id.split('_')[0] === id))\n\t\t\t\trefresh();\n\t\t};\n\n\t\tvar refresh = function() {\n\t\t\tif (config.id) {\n\t\t\t\tvar arr = config.id.split('_');\n\t\t\t\tflowstreamid = arr[0];\n\t\t\t\tinstanceid = arr[1];\n\t\t\t\tinstance.io(flowstreamid, instanceid, function(err, com) {\n\t\t\t\t\tif (com)\n\t\t\t\t\t\tinstance.status({ name: com.name + '/' + com.item.name });\n\t\t\t\t\telse\n\t\t\t\t\t\tinstance.status({ name: '' });\n\t\t\t\t});\n\t\t\t} else\n\t\t\t\tinstance.status({ name: '' });\n\t\t};\n\n\t\tinstance.configure = function() {\n\t\t\trefresh();\n\t\t};\n\n\t\tsetTimeout(refresh, 3000);\n\t};\n\n</script>\n\n<script>\n\tON('configure_subscribe', function(data) {\n\t\tdata.call(function(response) {\n\t\t\tSET('%outputs', response);\n\t\t}, true);\n\t});\n</script>\n\n<settings>\n\t<div class=\"padding\">\n\t\t<div data---=\"input__?.id__dirsource:%outputs;dirraw:1;placeholder:Choose a specific input;dirempty:No output\" class=\"m\"><b>Output</b></div>\n\t</div>\n</settings>\n\n<readme>\nThe component subscribes to the specific `Output` component.\n</readme>\n\n<body>\n\t<header>\n\t\t<i class=\"ICON\"></i>NAME: <b class=\"monospace\" data-bind=\"STATUS.name__text__empty\"></b>\n\t</header>\n</body>",
		"cp482f6e77": "<script total>\n\n\texports.name = 'Output';\n\texports.group = 'FlowStream';\n\texports.version = '1';\n\texports.icon = 'fa fa-crosshairs';\n\texports.author = 'Total.js';\n\texports.config = { name: 'Output', readme: '' };\n\texports.inputs = [{ id: 'data', name: 'Data' }];\n\texports.type = 'output';\n\n\texports.make = function(instance, config) {\n\t\tinstance.message = function($) {\n\t\t\tinstance.output($.data);\n\t\t\t$.destroy();\n\t\t};\n\t};\n\n</script>\n\n<settings>\n\t<div class=\"padding\">\n\t\t<div data---=\"input__?.name__required:1\" class=\"m\"><b>Output name</b></div>\n\t\t<div data---=\"textarea__?.readme__monospace:1;height:250\">Readme</div>\n\t\t<div class=\"help\">Supports markdown format</div>\n\t</div>\n</settings>\n\n<readme>\nThe component sends data to a `Subscribe` component in another FlowStream.\n</readme>\n\n<body>\n\t<header>\n\t\t<i class=\"ICON\"></i>NAME: <b data-bind=\"CONFIG.name__text__empty\"></b>\n\t</header>\n</body>",
		"cp5sw0a1c5": "<script total>\n\n\texports.name = 'Publish';\n\texports.group = 'FlowStream';\n\texports.version = '3';\n\texports.icon = 'fa fa-crosshairs';\n\texports.author = 'Total.js';\n\texports.config = { name: '', readme: '' };\n\texports.inputs = [{ id: 'data', name: 'Data' }];\n\texports.type = 'output2';\n\n\texports.call = function(data, answer) {\n\t\t// \"this\" means FlowStream instance\n\t\tthis.io(function(err, response) {\n\t\t\tvar arr = [];\n\t\t\tfor (var flow of response) {\n\t\t\t\tfor (var com of flow.items) {\n\t\t\t\t\tif (com.type === 'input') {\n\t\t\t\t\t\tcom.id = flow.id + '_' + com.id;\n\t\t\t\t\t\tcom.name = '<b>' + flow.name.encode() + ':</b> ' + com.name.encode();\n\t\t\t\t\t\tarr.push(com);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tarr.quicksort('name');\n\t\t\tanswer(arr);\n\t\t});\n\t};\n\n\texports.make = function(instance, config) {\n\n\t\tvar flowstreamid;\n\t\tvar instanceid;\n\n\t\tinstance.message = function(msg) {\n\t\t\tif (flowstreamid && instanceid)\n\t\t\t\tinstance.toinput(msg.data, flowstreamid, instanceid);\n\t\t\tmsg.destroy();\n\t\t};\n\n\t\tinstance.flowstream = function(id, type) {\n\t\t\tif (!id || (config.id && config.id.split('_')[0] === id))\n\t\t\t\trefresh();\n\t\t};\n\n\t\tvar refresh = function() {\n\t\t\tif (config.id) {\n\t\t\t\tvar arr = config.id.split('_');\n\t\t\t\tflowstreamid = arr[0];\n\t\t\t\tinstanceid = arr[1];\n\t\t\t\tinstance.io(flowstreamid, instanceid, function(err, com) {\n\t\t\t\t\tif (com)\n\t\t\t\t\t\tinstance.status({ name: com.name + '/' + com.item.name });\n\t\t\t\t\telse\n\t\t\t\t\t\tinstance.status({ name: '' });\n\t\t\t\t});\n\t\t\t} else\n\t\t\t\tinstance.status({ name: '' });\n\t\t};\n\n\t\tinstance.configure = function() {\n\t\t\trefresh();\n\t\t};\n\n\t\tsetTimeout(refresh, 3000);\n\t};\n\n</script>\n\n<script>\n\tON('configure_publish', function(data) {\n\t\tdata.call(function(response) {\n\t\t\tSET('%inputs', response);\n\t\t}, true);\n\t});\n</script>\n\n<settings>\n\t<div class=\"padding\">\n\t\t<div data---=\"input__?.id__dirsource:%inputs;dirraw:1;placeholder:Choose a specific input;dirempty:No input\" class=\"m\"><b>Input</b></div>\n\t</div>\n</settings>\n\n<readme>\nThe component publish the data to the specific `Input` component.\n</readme>\n\n<body>\n\t<header>\n\t\t<i class=\"ICON\"></i>NAME: <b class=\"monospace\" data-bind=\"STATUS.name__text__empty\"></b>\n\t</header>\n</body>",
		"typerefinery_printjson": "<script total>\r\n\r\n\texports.id = 'typerefinery_printjson';\r\n\texports.name = 'Print JSON';\r\n\texports.icon = 'fa fa-print';\r\n\texports.group = '@TypeRefinery';\r\n\texports.author = 'TypeRefinery.io';\r\n\texports.version = '2';\r\n\r\n\texports.config = { title: exports.name, version: exports.version, repo: false, data: true };\r\n\texports.inputs = [{ id: 'input', name: 'Input' }];\r\n\r\n\texports.make = function(instance, config) {\r\n\t\tinstance.message = function($) {\r\n\r\n\t\t\tvar data = $.data;\r\n\r\n\t\t\tif (config.data !== false) {\r\n\t\t\t\tif (data instanceof Buffer)\r\n\t\t\t\t\tdata = data.toString('hex').substring(0, 200);\r\n\t\t\t}\r\n\r\n\t\t\tvar count = 0;\r\n\r\n\t\t\tfor (var key in config) {\r\n\t\t\t\tif (key == \"repo\" || key == \"data\" ) {\r\n\t\t\t\t\tif (config[key]) {\r\n\t\t\t\t\t\tcount++;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tvar output = count > 1 ? {} : null;\r\n\r\n\t\t\tif (config.repo) {\r\n\t\t\t\tif (output)\r\n\t\t\t\t\toutput.repo = $.repo;\r\n\t\t\t\telse\r\n\t\t\t\t\toutput = $.repository;\r\n\t\t\t}\r\n\r\n\t\t\tif (config.data) {\r\n\t\t\t\tif (output)\r\n\t\t\t\t\toutput.data = $.data;\r\n\t\t\t\telse\r\n\t\t\t\t\toutput = $.data;\r\n\t\t\t}\r\n\r\n\t\t\toutput && instance.status(output);\r\n\t\t\t$.destroy();\r\n\t\t};\r\n\r\n\t\tinstance.trigger = function() {\r\n\t\t\tinstance.status('');\r\n\t\t};\r\n\r\n\t\tinstance.configure = function() {\r\n\t\t\tif (config.title === \"\") {\r\n\t\t\t\tconfig.title = exports.name;\r\n\t\t\t}\r\n\t\t\tconfig.version = exports.version;\r\n\t\t};\r\n\r\n\t\tinstance.configure();\r\n\r\n\t};\r\n\r\n</script>\r\n\r\n<style>\r\n\t.CLASS footer > div { margin: 10px; }\r\n\t.CLASS pre { font-size: 10px; margin: 0; padding: 5px; background-color: #F0F0F0; border-radius: var(--radius); }\r\n\t.CLASS button { float: right; height: 20px; font-size: 11px; border: 1px solid #E0E0E0; border-radius: var(--radius); color: #000; background-color: transparent; margin: 0; padding: 0 5px; }\r\n\t.CLASS button:hover { background-color: #F8F8F8; }\r\n\t.CLASS button:active { background-color: #E0E0E0; }\r\n\t.CLASS .ui-objecttree { background-color: #f0f0f0; padding: 4px; }\r\n\r\n\t.ui-dark .CLASS pre { background-color: #404040; tab-size: 2; }\r\n\t.ui-dark .CLASS button { border-color: #404040; color: #FFF; }\r\n\t.ui-dark .CLASS button:hover { background-color: #303030; }\r\n\t.ui-dark .CLASS button:active { background-color: #404040; }\r\n</style>\r\n\r\n<readme>\r\n\tThe component prints incoming data in a JSON format.\r\n</readme>\r\n\r\n<settings>\r\n\t<div class=\"padding\">\r\n\t\t<div data---=\"input__?.title__text\"><b>Title</b></div>\r\n\t\t<div data---=\"input__?.repo__type:checkbox\">Shows repository</div>\r\n\t\t<div data---=\"input__?.data__type:checkbox\">Shows data</div>\r\n\t</div>\r\n</settings>\r\n\r\n<script>\r\n\tFUNC.printjson_click = function(type, data) { // type = path/data\r\n\t\tnavigator.clipboard.writeText(type === 'path' ? data : STRINGIFY(data)).catch(e => console.error(e));\r\n\t};\r\n\r\n\t$('body').on('click', '.ui-objecttree .fa-copy, .ui-objecttree .fa-link', function(){\r\n\t\tvar el = $(this);\r\n\t\tvar iscopy = el.hclass('fa-copy');\r\n\t\tel.tclass(iscopy ? 'fa-copy' : 'fa-link').tclass('fa-check');\r\n\t\tsetTimeout(function(){\r\n\t\t\tel.tclass('fa-check').tclass(iscopy ? 'fa-copy' : 'fa-link');\r\n\t\t}, 2000);\r\n\t});\r\n</script>\r\n\r\n<body>\r\n\t<header>\r\n\t\t<button class=\"exec\" data-exec=\"FUNC.trigger\">Clear</button>\r\n\t\t<i class=\"ICON\"></i><b class=\"monospace\" data-bind=\"CONFIG.title__text__empty\"></b>\r\n\t\t<div><small><i>NAME v<span data-bind=\"CONFIG.version__text__empty\"></span></i></small></div>\r\n\t</header>\r\n\t<footer>\r\n\t\t<div data---=\"objecttree__!STATUS__exec:FUNC.printjson_click\" class=\"selectable\"></div>\r\n\t</footer>\r\n</body>",
		"typerefinery_senddata": "<script total>\r\n\r\n\texports.id = 'typerefinery_senddata';\r\n\texports.name = 'Send Data';\r\n\texports.group = '@TypeRefinery';\r\n\texports.version = '2';\r\n\texports.icon = 'fa fa-bullhorn';\r\n\texports.author = 'Team_Typerefinery';\r\n\texports.config = { title: exports.name, version: exports.version, random: true, type: 'object', data: '', restart: false };\r\n\texports.outputs = [{ id: 'output', name: 'Output' }];\r\n\r\n\texports.make = function(instance, config) {\r\n\r\n\t\tinstance.trigger = function() {\r\n\r\n\t\t\tvar val;\r\n\r\n\t\t\tswitch (config.type) {\r\n\t\t\t\tcase 'number':\r\n\t\t\t\t\tval = config.random ? U.random() : config.data.parseFloat();\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'buffer':\r\n\t\t\t\t\ttry {\r\n\t\t\t\t\t\tval = config.random ? Buffer.from(U.random_string()) : Buffer.from(config.data, 'base64');\r\n\t\t\t\t\t} catch (e) {\r\n\t\t\t\t\t\tinstance.throw(e);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'date':\r\n\t\t\t\t\tval = config.random ? NOW.add('-' + U.random(500, 10) + ' seconds') : config.data.parseDate();\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'object':\r\n\t\t\t\t\ttry {\r\n\t\t\t\t\t\tval = config.random ? {} : (new Function('return ' + config.data))();\r\n\t\t\t\t\t} catch (e) {\r\n\t\t\t\t\t\tinstance.throw(e);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'boolean':\r\n\t\t\t\t\tval = config.random ? U.random() % 2 === 0 : config.data === 'true' || config.data === 'on' || config.data === '1';\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tdefault:\r\n\t\t\t\t\tval = config.random ? U.random_string(20) : config.data;\r\n\t\t\t\t\tbreak;\r\n\t\t\t}\r\n\r\n\t\t\tinstance.send('output', val);\r\n\t\t};\r\n\r\n\t\tinstance.configure = function() {\r\n\t\t\tif (config.title === \"\") {\r\n\t\t\t\tconfig.title = exports.name;\r\n\t\t\t}\r\n\t\t\tconfig.version = exports.version;\r\n\t\t};\r\n\r\n\t\tinstance.configure();\r\n\r\n\t\tconfig.restart && setTimeout(() => instance.trigger(), 5000);\r\n\t};\r\n\r\n</script>\r\n\r\n<style>\r\n\t.CLASS .padding { padding: 0 10px 10px; }\r\n\t.CLASS footer > div { margin: 10px; }\r\n\t.CLASS pre { font-size: 10px; margin: 0; padding: 5px; background-color: #F0F0F0; border-radius: var(--radius); }\r\n\t.CLASS button { width: 100%; height: 24px; border: 1px solid #E0E0E0; border-radius: var(--radius); color: #000; background-color: #F0F0F0; margin: 0; }\r\n\t.CLASS button:hover { background-color: #F8F8F8; }\r\n\t.CLASS button:active { background-color: #E0E0E0; }\r\n\t.CLASS .ui-objecttree { background-color: #f0f0f0; padding: 4px; }\r\n\t.CLASS .largetext { max-height: 100px; overflow-y: auto; }\r\n\r\n\t.ui-dark .CLASS button { border-color: #404040; color: #FFF; background-color: #222; }\r\n\t.ui-dark .CLASS button:hover { background-color: #303030; }\r\n\t.ui-dark .CLASS button:active { background-color: #404040; }\r\n\r\n\t.CLASS .output { text-align: right }\r\n</style>\r\n\r\n<settings>\r\n\t<div class=\"padding\">\r\n\t\t<div data---=\"input__?.title__text\"><b>Title</b></div>\r\n\t\t<div data---=\"input__?.type__dirsource:string|String,number|Number,boolean|Boolean,date|Date,object|Object,buffer|Buffer as Base64;required:1\">Type</div>\r\n\t\t<div class=\"mt10 m\">\r\n\t\t\t<div data---=\"input__?.restart__type:checkbox\">Trigger 5s after initialization.</div>\r\n\t\t\t<div data---=\"input__?.random__type:checkbox\">Random data</div>\r\n\t\t</div>\r\n\t\t<div data-bind=\"?.random__hide\" class=\"hidden\">\r\n\t\t\t<hr />\r\n\t\t\t<div data---=\"input__?.data__required:1;height:250;type:multiline;maxlength:100000;monospace:1\">Data</div>\r\n\t\t</div>\r\n\t</div>\r\n</settings>\r\n\r\n<readme>\r\nThe component triggers data into the Flow.\r\n</readme>\r\n\r\n<body>\r\n\t<header>\r\n\t\t<i class=\"ICON\"></i><b class=\"monospace\" data-bind=\"CONFIG.title__text__empty\"></b>\r\n\t\t<div><small><i>NAME v<span data-bind=\"CONFIG.version__text__empty\"></span></i> - <b class=\"monospace\" data-bind=\"CONFIG.type__text__empty\"></b></small></div>\r\n\t</header>\r\n\t<div class=\"padding\">\r\n\t\t<button class=\"exec\" data-exec=\"FUNC.trigger\">Run</button>\r\n\t</div>\r\n\t<footer>\r\n\t\t<div class=\"monospace selectable largetext\" data---=\"objecttree__!CONFIG.data__text__empty\"></div>\r\n\t</footer>\r\n</body>"
	},
	"design": {
		"ildfvqrwd": {
			"id": "ildfvqrwd",
			"config": {
				"name": "",
				"id": "fxqxw001ey41d_flow_output"
			},
			"x": 220,
			"y": 133.00000762939453,
			"component": "cp2jt18af1",
			"connections": {
				"data": [
					{
						"id": "ildfvvg2d",
						"index": "input"
					}
				]
			},
			"template": {
				"type": "input2",
				"icon": "fa fa-broadcast-tower",
				"group": "FlowStream",
				"name": "Subscribe",
				"outputs": [
					{
						"id": "data",
						"name": "Data"
					}
				]
			}
		},
		"ildfvvg2d": {
			"id": "ildfvvg2d",
			"config": {
				"title": "Print JSON",
				"version": "2",
				"repo": false,
				"data": true
			},
			"x": 637.0000305175781,
			"y": 127.00000762939453,
			"component": "typerefinery_printjson",
			"connections": {},
			"template": {
				"icon": "fa fa-print",
				"group": "@TypeRefinery",
				"name": "Print JSON",
				"inputs": [
					{
						"id": "input",
						"name": "Input"
					}
				]
			}
		},
		"ildiew882": {
			"id": "ildiew882",
			"config": {
				"title": "Sample TMS Message \"sampleA\"",
				"version": "2",
				"random": false,
				"type": "object",
				"data": "{\n\"data\":\"sample\",\n\"topic\":\"sampleA\"\n}",
				"restart": false,
				"datasource": "TEST",
				"title1": "TITLE111"
			},
			"x": 198,
			"y": 343.00000762939453,
			"component": "typerefinery_senddata",
			"connections": {
				"output": [
					{
						"id": "ildiewi5t",
						"index": "data"
					}
				]
			},
			"template": {
				"icon": "fa fa-bullhorn",
				"group": "@TypeRefinery",
				"name": "Send Data",
				"outputs": [
					{
						"id": "output",
						"name": "Output"
					}
				]
			}
		},
		"ildiewi5t": {
			"id": "ildiewi5t",
			"config": {
				"name": "",
				"readme": "",
				"id": "fxqxw001ey41d_flow_input"
			},
			"x": 611.0000305175781,
			"y": 440.00000762939453,
			"component": "cp5sw0a1c5",
			"connections": {},
			"template": {
				"type": "output2",
				"icon": "fa fa-crosshairs",
				"group": "FlowStream",
				"name": "Publish",
				"inputs": [
					{
						"id": "data",
						"name": "Data"
					}
				]
			}
		},
		"groups": [
			{
				"id": "gldfvxfw2",
				"x": 138,
				"y": 54,
				"width": 875,
				"height": 577,
				"name": "Receive output from widget \"sampleA\""
			},
			{
				"id": "gldig62an",
				"x": 1069,
				"y": 53,
				"width": 725,
				"height": 571,
				"name": "Receive output from widget \"sampleB\""
			},
			{
				"id": "gldig6j75",
				"x": 149,
				"y": 691,
				"width": 396,
				"height": 396,
				"name": "Group"
			},
			{
				"id": "gldig6ku4",
				"x": 715,
				"y": 689,
				"width": 388,
				"height": 388,
				"name": "Group"
			},
			{
				"id": "gldig6pr3",
				"x": 1869,
				"y": 59,
				"width": 658,
				"height": 569,
				"name": "Receive output from widget \"sampleC\""
			},
			{
				"id": "gldig6r5k",
				"x": 1339,
				"y": 681,
				"width": 392,
				"height": 392,
				"name": "Group"
			},
			{
				"id": "gldig6sd0",
				"x": 1916,
				"y": 688,
				"width": 392,
				"height": 392,
				"name": "Group"
			},
			{
				"id": "gldig6vpe",
				"x": 190,
				"y": 1177,
				"width": 396,
				"height": 396,
				"name": "Group"
			},
			{
				"id": "gldig6wzk",
				"x": 747,
				"y": 1179,
				"width": 392,
				"height": 392,
				"name": "Group"
			},
			{
				"id": "gldig6ybr",
				"x": 1331,
				"y": 1176,
				"width": 392,
				"height": 392,
				"name": "Group"
			},
			{
				"id": "gldig77qr",
				"x": 1962,
				"y": 1182,
				"width": 396,
				"height": 396,
				"name": "Group"
			}
		]
	},
	"variables": {},
	"sources": {},
	"proxypath": "",
	"origin": "http://localhost:8111",
	"dtcreated": "2023-01-28T06:41:30.997Z",
	"size": 17959
}